<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.or.ddit.issue.mapper.IssueMapper">

	<!-- 이슈 전체 일정 -->
	<select id="issueAllSchedule" resultType="issueVo" parameterType="scheduleVo">
	<!-- 일정에 필요한 컬럼 정리 : 이슈제목, 이슈발행일시, 이슈해결일시, 이슈일시색깔 -->
	<!-- pid : project id / sid : session id -->
		SELECT	sue.issue_title,
				sue.issue_sdate,
				sue.issue_edate,
				sue.issue_color
		<choose>
			<when test="pid != null">
				FROM    project p INNER JOIN work w
				ON      p.project_id = w.work_project INNER JOIN issue sue
				ON      w.work_id = sue.issue_work
				where   p.project_id = #{pid}
			</when>
			<otherwise>
				FROM	issue sue
				WHERE	sue.issue_member = #{sid}
			</otherwise>
		</choose>
	</select>

	<!-- issue history 페이징처리 -->
	<select id="issueHistoryPagination" resultType="projectVo" parameterType="pageVo">
		SELECT  *
		FROM    (
		        SELECT  ROWNUM rnum,
		                A.*
		        FROM    (
		                SELECT  p.project_id,
		                        p.project_title,
		                        p.project_sdate,
		                        p.project_eedate,
		                        p.project_edate
		                FROM    project p INNER JOIN project_member pm
		                ON      pm.pmember_project = p.project_id
		                WHERE   pm.pmember_member = #{member_mail}
		                ) A
		        )
		WHERE   rnum BETWEEN ${page} * ${pageSize} - (${pageSize} - 1) AND ${page} * ${pageSize}	
	</select>
	
	<!-- 프로젝트 총 갯수 -->
	<select id="projectCnt" resultType="int" parameterType="pageVo">
		SELECT  COUNT(*)
		FROM    project p INNER JOIN project_member pm
		ON      p.project_id = pm.pmember_project
		WHERE   pm.pmember_member = #{member_mail}
	</select>

	<!-- 이슈 발생 등록 -->
	<insert id="issueInsert" parameterType="issueVo">
		INSERT INTO issue (issue_id, issue_work, issue_title, issue_level, issue_member, issue_sdate, issue_content)
		VALUES (issue_seq.NEXTVAL, #{issue_work}, #{issue_title}, #{issue_level}, #{issue_member}, #{issue_sdate}, #{issue_content})
		<selectKey keyProperty="issue_id" resultType="String" order="AFTER">
			SELECT  issue_seq.currval
			FROM    dual
		</selectKey>
	</insert>
	
	<!-- 이슈등록시 이슈ID를 todo테이블의 todo_issue컬럼에 추가(수정) -->
	<update id="todoIssueUpdate" parameterType="issueVo">
		UPDATE	todo
		SET		todo_issue = #{issue_id}
		WHERE	todo_id = #{todo_id}
	</update>
	
	<!-- project 참여자 : issue 등록시 select option list -->
	<select id="selGetProjectMember" resultType="issueVo" parameterType="String">
		SELECT  member_name,
		        pmember_member
		FROM    project_member INNER JOIN member
		ON      pmember_member = member_mail
		WHERE   pmember_project = (
		                           SELECT  work_project
		                           FROM    work
		                           WHERE   work_id = #{work_id}
		                           )
	</select>
	
	<!-- 이슈 리스트 조회 -->
	<select id="">
		
	</select>
	
	<!-- 이슈 수정 -->
	
	
	<!-- 이슈 해결 등록 -->
	
</mapper>
