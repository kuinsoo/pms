<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.or.ddit.member.mapper.MemberMapper">
    <resultMap id="pMemberResultMap" type="pMemberListVo">
        <id property="member_name" column="member_name" />
        <id property="member_profile" column="member_profile" />
        <id property="pmemberCount" column="pmemberCount" />
        <id property="pmember_position" column="pmember_position" />
        <id property="project_title" column="project_title" />
        <id property="project_overview" column="project_overview" />
        <id property="project_bookmark" column="project_bookmark" />
        <id property="project_id" column="project_id" />
    </resultMap>

	<!-- mina Project list -->
    <select id="selectMainView" parameterType="String" resultMap="pMemberResultMap">
        SELECT  DISTINCT
		        p.project_title,
		        p.project_overview,
		        p.project_bookmark,
		        p.project_id,
		        m.member_name,
		        m.member_profile,
		        pmember_position,
		        pmemberCount.*
		FROM    project p INNER JOIN project_member pm
		ON      p.project_id = pm.pmember_project INNER JOIN member m
		ON      pm.pmember_member = m.member_mail INNER JOIN (SELECT  pmember_project,
		                                                              COUNT(*) as pmemberCount
		                                                      FROM    project_member
		                                                      WHERE   pmember_project IN (SELECT  pmember_project
		                                                                                  FROM    project_member
		                                                                                  WHERE   pmember_member = #{member_mail})
		                                                      GROUP BY pmember_project) pmemberCount
		ON      pm.pmember_project = pmemberCount.pmember_project
		WHERE   m.member_mail = #{member_mail}
		order by to_number(p.PROJECT_id)
    </select>
    <!--
        SELECT  DISTINCT
                p.project_title,
                p.project_overview,
                p.project_bookmark,
                m.member_name,
                m.member_profile,
                pmcount.*
        FROM    project p INNER JOIN project_member pm
        ON      p.project_id = pm.pmember_project INNER JOIN member m
        ON      pm.pmember_member = m.member_mail INNER JOIN (SELECT  pmember_project,
                                                                      COUNT(*)
                                                              FROM    project_member
                                                              WHERE   pmember_project IN (SELECT  pmember_id
                                                                                          FROM    project_member
                                                                                          WHERE   pmember_member = 'kkuinsoo@gmail.com')
                                                              GROUP BY pmember_project) pmcount
        ON      pm.pmember_project = pmcount.pmember_project
        WHERE   m.member_mail = 'kkuinsoo@gmail.com';
     -->

	<!-- 팀리더로 업데이트 등록 -->
    <insert id="setTeamLeader" parameterType="Map">
	  insert into PROJECT_MEMBER values (SEQ_PROJECT_MEMBER.nextval,SEQ_PROJECT.currval,#{member_email}, #{pmember_position}, sysdate )
    </insert>


	<!-- 팀 원으로 등록 -->
    <insert id="inviteTeam" parameterType="pMemberVo">
      insert into PROJECT_MEMBER values (SEQ_PROJECT_MEMBER.nextval,#{pmember_project},#{pmember_member},'2', sysdate )
    </insert>

	<!-- 초대받은 프로젝트들 -->
	<insert id="invitedProjects" parameterType="inviteProjectVo">
		insert into INVITE_PROJECT values (#{member_mail}, #{project_id}, #{project_invite}, #{invite_mail})
	</insert>

	<!-- 초대받은 프로젝트에 포함된 이메일인지 검색 -->
	<select id="searchTeamMember" parameterType="pMemberVo" resultType="pMemberVo">
		select * from PROJECT_MEMBER
		where PMEMBER_MEMBER = #{pmember_member}
		and PMEMBER_PROJECT = #{pmember_project}
	</select>

	<select id="selectInviteProject" parameterType="String" resultType="inviteProjectVo">
		select C.MEMBER_NAME,
       B.PROJECT_TITLE,
       B.PROJECT_OVERVIEW,
       A.PROJECT_INVITE,
       B.PROJECT_ID
		from INVITE_PROJECT A, PROJECT B, MEMBER C where C.MEMBER_MAIL = A.MEMBER_MAIL
                                                  and B.PROJECT_ID = A.PROJECT_ID
                                                  and A.MEMBER_MAIL = #{pmember_member}
	</select>

	<delete id="deleteInviteProject" parameterType="String">
		delete from INVITE_PROJECT where MEMBER_MAIL = #{member_mail}
	</delete>
</mapper>