<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.or.ddit.member.mapper.MemberMapper">
    <resultMap id="pMemberResultMap" type="pMemberListVo">
        <id property="member_name" column="member_name" />
        <id property="member_profile" column="member_profile" />
        <id property="pmemberCount" column="pmemberCount" />
        <id property="pmember_member" column="pmember_member" />
        <id property="pmember_position" column="pmember_position" />
        <id property="project_title" column="project_title" />
        <id property="project_overview" column="project_overview" />
        <id property="project_bookmark" column="project_bookmark" />
        <id property="project_id" column="project_id" />
    </resultMap>

	<!-- mina Project list -->
    <select id="selectMainView" parameterType="String" resultMap="pMemberResultMap">
        SELECT  p.project_id,
        p.project_title,
        p.project_overview,
        pm.pmember_position,
        pm.pmember_bookmark,
        mail.pmember_member,
        mem.member_name,
        mem.member_profile,
        pCount.pmemberCount
FROM    project_member pm INNER JOIN project p
            ON      pm.pmember_project = p.project_id INNER JOIN (SELECT  pmember_project,
                                                                          pmember_member
                                                                  FROM    project_member
                                                                  WHERE   pmember_position = 1) mail
            ON      pm.pmember_project = mail.pmember_project INNER JOIN (SELECT  member_mail,
                                                                                  member_name,
                                                                                  member_profile
                                                                          FROM    member) mem
            ON      mail.pmember_member = mem.member_mail INNER JOIN (SELECT  pmember_project,
                                                                              COUNT(*) pmemberCount
                                                                      FROM    project_member
                                                                      WHERE   pmember_project IN (SELECT  pmember_project
                                                                                                  FROM    project_member
                                                                                                  WHERE   pmember_member = #{member_mail})
                                                                      GROUP BY pmember_project) pCount
            ON      pm.pmember_project = pCount.pmember_project
WHERE   pm.pmember_member = #{member_mail}
		order by to_number(PROJECT_ID) desc
    </select>
    <!--
             SELECT  DISTINCT
		        p.project_title,
		        p.project_overview,
		        pm.PMEMBER_BOOKMARK,
		        p.project_id,
		        m.member_name,
		        m.member_profile,
		        pmember_position,
		        pmemberCount.*
		FROM    project p INNER JOIN project_member pm
		ON      p.project_id = pm.pmember_project INNER JOIN member m
		ON      pm.pmember_member = m.member_mail INNER JOIN (SELECT  pmember_project,
		                                                              COUNT(*) as pmemberCount
		                                                      FROM    project_member
		                                                      WHERE   pmember_project IN (SELECT  pmember_project
		                                                                                  FROM    project_member
		                                                                                  WHERE   pmember_member = #{member_mail})
		                                                      GROUP BY pmember_project) pmemberCount
		ON      pm.pmember_project = pmemberCount.pmember_project
		WHERE   m.member_mail = #{member_mail}
		order by to_number(p.PROJECT_id)
     -->

	<!-- 팀리더로 업데이트 등록 -->
    <insert id="setTeamLeader" parameterType="Map">
	  insert into PROJECT_MEMBER (PMEMBER_ID, PMEMBER_PROJECT, PMEMBER_MEMBER, PMEMBER_POSITION, PMEMBER_DATE, PMEMBER_BOOKMARK)
	  values (SEQ_PROJECT_MEMBER.nextval,SEQ_PROJECT.currval,#{member_email},#{pmember_position},sysdate,'N')
    </insert>


	<!-- 팀 원으로 등록 -->
    <insert id="inviteTeam" parameterType="pMemberVo">
      insert into PROJECT_MEMBER (PMEMBER_ID, PMEMBER_PROJECT, PMEMBER_MEMBER, PMEMBER_POSITION, PMEMBER_DATE, PMEMBER_BOOKMARK)
      values (SEQ_PROJECT_MEMBER.nextval,#{pmember_project},#{pmember_member},'2', sysdate,'N')
    </insert>

	<!-- 초대받은 프로젝트들 -->
	<insert id="invitedProjects" parameterType="inviteProjectVo">
		insert into INVITE_PROJECT (MEMBER_MAIL, PROJECT_ID, PROJECT_INVITE, INVITE_MAIL, INVITE_NAME)
		values (#{member_mail}, #{project_id}, #{project_invite}, #{invite_mail}, #{invite_name})
	</insert>

	<!-- 초대받은 프로젝트에 포함된 이메일인지 검색 -->
	<select id="searchTeamMember" parameterType="pMemberVo" resultType="pMemberVo">
		select * from PROJECT_MEMBER
		where PMEMBER_MEMBER = #{pmember_member}
		and PMEMBER_PROJECT = #{pmember_project}
	</select>
	
	<!--  이미 초대한 회원인지 검색 -->
	<select id="searchInviteMember" parameterType="pMemberVo" resultType="inviteProjectVo">
		select * from INVITE_PROJECT
		where MEMBER_MAIL = #{pmember_member}
		and PROJECT_ID = #{pmember_project}
	</select>

	<!-- 초대 받은 프로젝트 -->
	<select id="selectInviteProject" parameterType="String" resultType="inviteProjectVo">
		select C.MEMBER_NAME,
	       B.PROJECT_TITLE,
	       B.PROJECT_OVERVIEW,
	       A.PROJECT_INVITE,
	       B.PROJECT_ID
			from INVITE_PROJECT A, PROJECT B, MEMBER C where C.MEMBER_MAIL = A.MEMBER_MAIL
	                                                  and B.PROJECT_ID = A.PROJECT_ID
	                                                  and A.MEMBER_MAIL = #{pmember_member}
	</select>

	<!-- 초대받은 프로젝트 맵방식 -->
	<select id="selectInviteProjectMap" parameterType="Map" resultType="inviteProjectVo">
	select C.MEMBER_NAME,
	   B.PROJECT_TITLE,
	   B.PROJECT_OVERVIEW,
	   A.PROJECT_INVITE,
	   B.PROJECT_ID,
	   A.invite_name
		from INVITE_PROJECT A, PROJECT B, MEMBER C where C.MEMBER_MAIL = A.MEMBER_MAIL
												  and A.PROJECT_ID = B.PROJECT_ID
												  and A.MEMBER_MAIL = #{member_mail}
												  and A.PROJECT_ID = #{project_id}
	</select>
	
	<!-- 프로젝트 삭제 (미사용중) -->
	<delete id="deleteInviteProject" parameterType="Map">
		delete from INVITE_PROJECT where MEMBER_MAIL = #{member_mail} and project_id = #{project_id}
	</delete>

	<!-- 프로젝트 참여자 리스트 -->
	<select id="projectMemberList" resultMap="pMemberResultMap" parameterType="String">
		select PMEMBER_MEMBER, MEMBER_NAME, MEMBER_PROFILE, PMEMBER_POSITION
		from PROJECT_MEMBER inner join MEMBER on (PMEMBER_MEMBER = MEMBER_MAIL)
		and PMEMBER_PROJECT = #{project_id}
		order by pmember_position asc
	</select>


	<!-- 프로젝트 즐겨 찾기 검색 -->
	<select id="selectBookmarkProject" parameterType="Map" resultType="pMemberVo">
		select PMEMBER_PROJECT, PMEMBER_BOOKMARK from PROJECT_MEMBER
		where PMEMBER_PROJECT = #{pmember_project}
		and PMEMBER_MEMBER = #{pmember_member}
	</select>

	<update id="updateBookmark" parameterType="pMemberVo">
		update PROJECT_MEMBER
		set PMEMBER_BOOKMARK = #{pmember_bookmark}
		where PMEMBER_PROJECT=  #{pmember_project}
		and PMEMBER_MEMBER = #{pmember_member}
	</update>
</mapper>