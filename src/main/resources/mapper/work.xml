<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.or.ddit.work.mapper.WorkMapper">


	<!-- 업무 전체 일정 -->
	<select id="workAllSchedule" resultType="workVo" parameterType="scheduleVo">
	<!-- 일정에 필요한 컬럼 정리: 업무제목, 업무시작일자, 업무예상마감일자, 업무마감일자, 업무일정색깔 -->
		SELECT	w.work_title,
				w.work_sdate,
				w.work_eedate,
				w.work_edate,
				w.work_color
		<choose>
			<when test="pid != null">
				FROM	work w
				WHERE	work_project = #{pid}
			</when>
			<otherwise>
				FROM    work_member wm INNER JOIN project_member pm
				ON      wm.pmember_id = pm.pmember_id INNER JOIN work w
				ON      wm.work_id = w.work_id
				WHERE   pm.pmember_member = #{sid}
			</otherwise>
		</choose>
	</select>
	
	<!-- 로그인 한 회원의 업무 생성 알림 2018-12-18 임규승 -->
	<select id="workMember" resultType="workVo" parameterType="String">
	SELECT  WORK_TITLE
	FROM    WORK W, WORK_MEMBER WM, PROJECT_MEMBER PM, MEMBER M,
	        (
	            SELECT  P.PROJECT_ID FROM PROJECT_MEMBER PM, MEMBER M, PROJECT P
	            WHERE   M.MEMBER_MAIL = PM.PMEMBER_MEMBER
	            AND     PM.PMEMBER_PROJECT = P.PROJECT_ID
	            AND     M.MEMBER_MAIL = #{member_mail}
	            AND     P.PROJECT_DELETE = 'N'
	        ) allProject
	WHERE   M.MEMBER_MAIL = PM.PMEMBER_MEMBER
	AND     PM.PMEMBER_ID = WM.PMEMBER_ID
	AND     WM.WORK_ID = W.WORK_ID
	AND     allProject.PROJECT_ID = W.WORK_PROJECT
	</select>
	
	<!-- 로그인 한 회원의 업무 총 갯수 뽑아오기 2019-01-02 임규승 -->
	<select id="workMemberTotalCnt" resultType="int" parameterType="String">
		SELECT  COUNT(*)
		FROM    WORK W, WORK_MEMBER WM, PROJECT_MEMBER PM, MEMBER M,
		        (
		            SELECT  P.PROJECT_ID FROM PROJECT_MEMBER PM, MEMBER M, PROJECT P
		            WHERE   M.MEMBER_MAIL = PM.PMEMBER_MEMBER
		            AND     PM.PMEMBER_PROJECT = P.PROJECT_ID
		            AND     M.MEMBER_MAIL = #{member_mail}
		            AND     P.PROJECT_DELETE = 'N'
		        ) allProject
		WHERE   M.MEMBER_MAIL = PM.PMEMBER_MEMBER
		AND     PM.PMEMBER_ID = WM.PMEMBER_ID
		AND     WM.WORK_ID = W.WORK_ID
		AND     allProject.PROJECT_ID = W.WORK_PROJECT
	</select>
	
	<!-- 알림을 위한 업무 게시글 페이징 조회 2019-01-02 -->
	<select id="getWorkPageList" resultType="workVo" parameterType="map">
		SELECT  *
		FROM    (
		        select  rownum rnum,
		                a.*
		        from    (
		                select  a.*
		                from    (
		                        SELECT  ROWNUM labelrn,
		                                A.*
		                        FROM    (
		                                SELECT  WORK_TITLE
		                                FROM    WORK W, WORK_MEMBER WM, PROJECT_MEMBER PM, MEMBER M,
										        (
										            SELECT  P.PROJECT_ID FROM PROJECT_MEMBER PM, MEMBER M, PROJECT P
										            WHERE   M.MEMBER_MAIL = PM.PMEMBER_MEMBER
										            AND     PM.PMEMBER_PROJECT = P.PROJECT_ID
										            AND     M.MEMBER_MAIL = #{member_mail}
										            AND     P.PROJECT_DELETE = 'N'
										        ) allProject
										WHERE   M.MEMBER_MAIL = PM.PMEMBER_MEMBER
										AND     PM.PMEMBER_ID = WM.PMEMBER_ID
										AND     WM.WORK_ID = W.WORK_ID
										AND     allProject.PROJECT_ID = W.WORK_PROJECT
		                                ) A
		                        ) a
		                order by labelrn desc
		                ) a
		        ) B
		WHERE   rnum BETWEEN #{page} * #{pageSize} - (#{pageSize} - 1) AND #{page} * #{pageSize}
		ORDER BY rnum
	</select>
	

	<select id="selectWorks" resultType="workVo" parameterType="String">
		select W.WORK_ID,
			   W.WORK_TITLE,
			   W.WORK_CONTENT,
			   W.WORK_WDATE,
			   W.WORK_TYPE,
			   W.WORK_PROJECT,
			   W.WORK_IMPORTANCE,
			   W.WORK_SDATE,
			   W.WORK_EEDATE,
			   W.WORK_EDATE,
			   W.WORK_PROGRESS,
			   W.WORK_APPROVAL,
			   W.WORK_PUBLIC,
			   M.MEMBER_MAIL,
			   M.MEMBER_PROFILE
		from MEMBER M INNER JOIN PROJECT_MEMBER PM on (M.MEMBER_MAIL = PM.PMEMBER_MEMBER)
			INNER JOIN WORK_MEMBER WM on (PM.PMEMBER_ID = WM.PMEMBER_ID )
			INNER JOIN WORK W on (WM.WORK_ID = W.WORK_ID)
			where W.WORK_PROJECT = #{work_project}
		ORDER by to_number(W.WORK_ID) desc
	</select>

	<insert id="createWork" parameterType="workVo">
		insert into work 
		values(SEQ_WORK.NEXTVAL, #{work_project}, #{work_title}, #{work_content}, #{work_type}, ${work_importance},
					 #{work_sdate}, #{work_eedate},0, 'N',#{work_eedate},#{work_public},'#4286f4',sysdate)
	</insert>


	<update id="updateWork" parameterType="workVo">
		UPDATE WORK
		SET WORK_TITLE = #{work_title}, WORK_CONTENT = #{work_content}, WORK_TYPE = #{work_type},
		 WORK_IMPORTANCE = ${work_importance},  WORK_SDATE = #{work_sdate}, WORK_EEDATE = #{work_eedate},
		 WORK_PROGRESS = #{work_progress}, WORK_PUBLIC = #{work_public},
		 WORK_COLOR = #{work_color}
		WHERE work_id = #{work_id}
	</update>

	<insert id="insertWorkMember" parameterType="Map">
		insert into work_member values (seq_work.currval, (SELECT PMEMBER_ID
														   FROM PROJECT_MEMBER
														   WHERE PMEMBER_MEMBER = #{pmember_member}
															 and PMEMBER_PROJECT = #{pmember_project}))
	</insert>


	<select id="workChart" parameterType="Map" resultType="todoVo">
		select T.TODO_ID, MP.MEMBER_PROFILE, T.TODO_MEMBER, T.TODO_PMEMBER, T.TODO_SDATE, T.TODO_EEDATE, T.TODO_COMPLET,T.TODO_WORK
			from todo T,work W, work_member WM,project_member PM , MEMBER M , (select MEMBER_MAIL, MEMBER_PROFILE from member) MP
			where M.MEMBER_MAIL = PM.PMEMBER_MEMBER
			and PM.PMEMBER_ID = WM.PMEMBER_ID
			and WM.WORK_ID = W.WORK_ID
			and W.WORK_ID = T.TODO_WORK
			and T.TODO_MEMBER = MP.MEMBER_MAIL
			and PM.PMEMBER_PROJECT = #{project_id}
			order by to_number(T.TODO_WORK) desc
	</select>


	<select id="selectWorkChart" parameterType="Map" resultType="todoVo">
		select T.TODO_ID, MP.MEMBER_PROFILE, MP.MEMBER_NAME, T.TODO_MEMBER, T.TODO_PMEMBER, T.TODO_SDATE, T.TODO_EEDATE, T.TODO_COMPLET,T.TODO_WORK, T.TODO_CONTENT
			from todo T,work W, work_member WM,project_member PM , MEMBER M , (select MEMBER_MAIL, MEMBER_PROFILE, MEMBER_NAME from member) MP
			where M.MEMBER_MAIL = PM.PMEMBER_MEMBER
			and PM.PMEMBER_ID = WM.PMEMBER_ID
			and WM.WORK_ID = W.WORK_ID
			and W.WORK_ID = T.TODO_WORK
			and T.TODO_MEMBER = MP.MEMBER_MAIL
			and PM.PMEMBER_PROJECT = #{project_id}
			and W.work_id = #{work_id}
			order by TODO_ID
	</select>

	<select id="selectWork" resultType="workVo" parameterType="String">
		select * from work
		where work_id = #{work_id}
	</select>

	<select id="selectWorkMap" resultType="workVo" parameterType="Map">
		select * from work
		where WORK_PROJECT = #{project_id}
		and work_id = #{work_id}
	</select>

	<!-- 변찬우_20190102 : 회의실에서 나의업무목록 출력 -->
	<select id="myWorkList" parameterType="workVo" resultType="workVo">
			select 	*
			from    work w
			inner join 	work_member wm
			on        w.work_id = wm.work_id
			inner join 	project_member pm
			on        pm.PMEMBER_ID = wm.PMEMBER_ID
			where 	pm.pmember_project = #{work_project}
			and 		pm.pmember_member = #{member_mail}
	</select>

	<select id="workMainChart" resultType="workVo" parameterType="String">
			select
				(select count(*)
				from work, PROJECT
				where WORK_PROJECT = PROJECT_ID
				and PROJECT_ID = P.PROJECT_ID) workCnt,
				(select count(*) from work, TODO
				where work_id = TODO_WORK
				and WORK_PROJECT = P.PROJECT_ID) todoCnt,
				(select count(ISSUE_ID) from work,ISSUE, TODO
				where work_id = TODO_WORK
				and TODO_ISSUE = ISSUE_ID
				and WORK_PROJECT = P.PROJECT_ID) issueCnt
			from PROJECT P
			where PROJECT_ID = #{project_id}
	</select>


	<delete id="deleteWork" parameterType="String">
		DELETE FROM WORK WHERE WORK_ID = #{work_id}
	</delete>

	<delete id="deleteWorkMember" parameterType="String">
		delete from WORK_MEMBER where WORK_ID = #{work_id}
	</delete>

	<select id="selectProjectWork" parameterType="String" resultType="workVo">
 		select * from work where WORK_PROJECT = #{project_id}
	</select>
</mapper>
