<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.or.ddit.message.mapper.MessageMapper">
	<!-- @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ -->
	<!-- 받은 쪽지 리스트 + 페이징처리 -->
	<select id="messageReceived"  resultType= "msgVo" parameterType="pageVo">
		select * from(
		    select rownum rnum ,a.*
		             from
		                  (select A.MSG_ID,
		                  		  A.MSG_SMEMBER, 
	                              A.MSG_CONTENT, 
	                              A.MSG_TIME,
	                              A.MSG_TYPE
	                        from  MESSAGE A, MESSAGE_MEMBER B
	                        where A.MSG_ID = B.MSGMEMBER_MSG
	                         and  B.MSG_RMEMBER= #{member_mail}
	                         ORDER BY A.MSG_TYPE desc)a)
	 		 where rnum between ${page}*${pageSize}-(${pageSize}-1) AND ${page}*${pageSize}
	</select>
	
	<!--  받은쪽지 갯수  -->
	<select id="totalMsgReceived" resultType="int" parameterType="String">
		select count (*)
		from MESSAGE_MEMBER
		where MSG_RMEMBER = #{member_mail}
	</select>
	
	
	<select id = "selectMessageReceived" resultType="msgVo" parameterType="String">
		select A.MSG_SMEMBER, 
      		   A.MSG_CONTENT, 
      		   A.MSG_TIME
		from  MESSAGE A, MESSAGE_MEMBER B
		where A.MSG_ID = B.MSGMEMBER_MSG
 		and  B.MSG_RMEMBER= #{member_mail}
 		and  A.MSG_ID = #{msg_id}
	</select>
	
	<!-- 받은 쪽지  읽음/안읽음 처리하기  -->
	<update id="updateMessageReceived" parameterType="msgVo">
		update message
		set msg_type = 'N'
		where msg_id = #{msg_id}
	</update>
	
	<select id = "selectOneMessageReceived" parameterType="String" resultType="msgVo">    
		select * from message
		where msg_id = #{msg_id}
	</select>
	
	
	<select id = "selectOneMessageSend" parameterType="msgVo" resultType="msgVo">    
		
		select * from(
			select rownum rnum ,a.*
		         from
		              (select * from message A inner join message_member B
						on A.msg_id = B.msgmember_msg
						where  A.msg_smember = #{msg_smember}
						and    A.msg_id = #{msg_id})a)
	</select>
	
	<select id="MyFriendsList"  resultType= "friendVo" parameterType="pageVo">
       select * from(
  			 select rownum rnum ,a.*
            from
                 (select friend_member,
                 		 friend_code
                         from   FRIENDSLIST
                         where  friend_myemail = #{member_mail} )a) 
            where rnum between ${page}*${pageSize}-(${pageSize}-1) AND ${page}*${pageSize}
            <if test="searchTextFriend!=null and searchTextFriend!=''">and friend_member like '%'||#{searchTextFriend}||'%'</if>
	</select> 
	
	
	<insert id="insertMessageSend" parameterType="msgVo">
		insert all
		<selectKey keyProperty="msg_id" resultType="String" order="BEFORE">
		     Select msg_id_SEQ.NEXTVAL From Dual
		  </selectKey>
			 into message values(#{msg_id},#{msg_smember},sysdate,'Y',#{msg_content})
			 into message_member values(#{msg_id},#{msg_rmember},sysdate)
		 	 select * from dual
	</insert>
	
	<!-- @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ -->
	<!-- 보낸쪽지 리스트 + 페이징 처리 -->
		
	<select id="messageSend"  resultType= "msgVo" parameterType="pageVo">
		select * from(
		    select rownum rnum ,a.*
		             from
		                  (select B.MSGMEMBER_MSG,
		                  		  B.MSG_RMEMBER, 
                                  A.MSG_CONTENT, 
                                  B.MSG_RDATE
                            from  MESSAGE A, MESSAGE_MEMBER B
                            where A.MSG_ID = B.MSGMEMBER_MSG
                            and A.MSG_SMEMBER = #{member_mail}
                              ORDER BY B.MSG_RDATE desc)a)
            where rnum between ${page}*${pageSize}-(${pageSize}-1) AND ${page}*${pageSize}
	</select>
	
	<!--  보낸쪽지 갯수  -->
	<select id="totalMsgSend" resultType="int" parameterType="String">
		select count(*) from message A, message_member B
        where MSG_SMEMBER = #{member_mail}
        and A.MSG_ID = B.MSGMEMBER_MSG
	</select>
	
	<delete id="deleteMsgReceived" parameterType="String">
		delete from message_member where msgmember_msg = #{msg_id}
	</delete>
	
	<delete id="deleteMsgSend" parameterType="String">
		delete from message_member where msgmember_msg = #{msg_id}
	</delete>
	
	<!-- @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ -->
	<!-- 친구목록 부분 -->
	
	<select id="totalFriends" resultType="int" parameterType="String">
		select count(*)
		from   FRIENDSLIST
		where  friend_myemail = #{member_mail}
	</select>
	
	<delete id="deleteMyfriend" parameterType="String">
		delete from FRIENDSLIST 
		where friend_code=  #{friend_code}
	</delete>
	
	<select id ="totalMemberSearch"  resultType="memberVo" parameterType="pageVo">
		 select * from(
  			 select rownum rnum ,a.*
           		 from
                	 (select member_mail  
                       from member)a) 
        where rnum between ${page}*${pageSize}-(${pageSize}-1) AND ${page}*${pageSize}
		<if test="searchTextFriendList!=null and searchTextFriendList!=''">and member_mail like '%'||#{searchTextFriendList}||'%'</if>
	</select>
</mapper>