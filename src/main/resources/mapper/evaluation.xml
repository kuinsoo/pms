<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.or.ddit.evaluation.mapper.EvaluationMapper">
 <!--   <select id="evaluationView" parameterType="Map" resultType="evalVo">
        SELECT P.PROJECT_TITLE, P.PROJECT_ID, P.PROJECT_OVERVIEW, P.PROJECT_SDATE, P.PROJECT_EEDATE , P.PROJECT_EDATE
                ,PM.PMEMBER_ID , WORK.WORK_TITLE , WORK.WORK_CONTENT
        FROM MEMBER M INNER JOIN PROJECT_MEMBER PM ON (M.MEMBER_MAIL = PM.PMEMBER_MEMBER)
                      INNER JOIN PROJECT P ON (PM.PMEMBER_PROJECT = P.PROJECT_ID)
                      LEFT OUTER JOIN (SELECT WORK_TITLE, WORK_CONTENT, PM2.PMEMBER_ID
                                       FROM WORK W, WORK_MEMBER WM, PROJECT_MEMBER PM2
                                       WHERE W.WORK_ID= WM.WORK_ID
                                         AND WM.PMEMBER_ID = PM2.PMEMBER_ID
                                      ) WORK ON PM.PMEMBER_ID= WORK.PMEMBER_ID
        WHERE PM.PMEMBER_MEMBER = #{member_mail}
          AND P.PROJECT_ID LIKE #{project_id}
        ORDER BY TO_NUMBER(PM.PMEMBER_ID)
    </select>-->

    <select id="evaluationView" parameterType="Map" resultType="evalVo">
            select PROJECT_TITLE, project_id, PROJECT_OVERVIEW ,PROJECT_SDATE, PROJECT_EEDATE, WORK_TITLE,TODO_CONTENT, todo_Member
            from PROJECT, work, TODO
            where project_id = WORK_PROJECT
            and WORK_ID = TODO_WORK
              and todo_member = #{member_mail}
            and PROJECT_ID = #{project_id}
    </select>

    <select id="evaluationProjectList" parameterType="String" resultType="evalVo">
        select PROJECT_TITLE, PROJECT_ID
        from project inner join PROJECT_MEMBER on PROJECT.PROJECT_ID = PROJECT_MEMBER.PMEMBER_PROJECT
                     inner join member on PROJECT_MEMBER.PMEMBER_MEMBER = MEMBER.MEMBER_MAIL
        where MEMBER_MAIL= #{member_mail}
        and PROJECT_DELETE = 'N'
        order by to_number(PROJECT_ID) desc
    </select>



    <select id="evaluationChart" resultType="evalVo" parameterType="Map">
      select PROJECT_ID , PROJECT_TITLE,
        /* 총 이슈 수 */
               (select count(*) as cnt from member,  PROJECT_MEMBER PM1, PROJECT, WORK, ISSUE
        where MEMBER_MAIL = PMEMBER_MEMBER
        and PMEMBER_PROJECT = PROJECT_ID
        and PROJECT_ID = WORK_PROJECT
        and WORK_ID = ISSUE_WORK
        and MEMBER_MAIL = #{member_mail}
          and PM2.PMEMBER_PROJECT = PM1.PMEMBER_PROJECT
        and ISSUE_HELPER = #{member_mail} ) issueCnt ,
        /* 총 업무 수 */
               (select count(*) as cnt from member,  PROJECT_MEMBER PM3, PROJECT, WORK
                where MEMBER_MAIL = PMEMBER_MEMBER
                  and PMEMBER_PROJECT = PROJECT_ID
                  and PROJECT_ID = WORK_PROJECT
                  and MEMBER_MAIL = #{member_mail}
                  and PM2.PMEMBER_PROJECT = PM3.PMEMBER_PROJECT) workCnt ,
        /* 참여 회원 수 */
               (select count(*) as cnt from MEMBER, PROJECT_MEMBER PM4, project
                where MEMBER_MAIL = PMEMBER_MEMBER
                  and PMEMBER_PROJECT = PROJECT_ID
                  and PM2.PMEMBER_PROJECT = PM4.PMEMBER_PROJECT) memberCnt,
        /* 내 업무 수 */
               (select count(*) from WORK_MEMBER WM, WORK W, PROJECT_MEMBER PM5
                where WM.PMEMBER_ID = PM5.PMEMBER_ID
                  and WM.WORK_ID = W.WORK_ID
                  and PM5.PMEMBER_MEMBER = #{member_mail}
                  and PM5.PMEMBER_PROJECT = PM2.PMEMBER_PROJECT) as myWorkCnt,
        /* 사용자가 해결한 이슈 */
               (select count(*) as cnt from member,  PROJECT_MEMBER PM6, PROJECT, WORK, ISSUE
                where MEMBER_MAIL = PMEMBER_MEMBER
                  and PMEMBER_PROJECT = PROJECT_ID
                  and PROJECT_ID = WORK_PROJECT
                  and WORK_ID = ISSUE_WORK
                  and MEMBER_MAIL = #{member_mail}
                  and ISSUE_HELPER = #{member_name}
                  and PM6.PMEMBER_PROJECT = PM2.PMEMBER_PROJECT)as myIssueCnt,
          /* 내 일감 수 */
                (select count(*) from project, work, TODO
                  where PROJECT_ID = WORK_PROJECT
                  and work_id = TODO_WORK
                  and todo_member = #{member_mail}
                  and PROJECT_ID = PM2.PMEMBER_PROJECT) as myTodoCnt,
     /* 총 일감 수 */
                (select count(*) from project, work, TODO
                  where PROJECT_ID = WORK_PROJECT
                  and work_id = TODO_WORK
                  and PROJECT_ID = PM2.PMEMBER_PROJECT) as todoCnt
        from MEMBER, PROJECT_MEMBER PM2, PROJECT P
        where MEMBER_MAIL = PMEMBER_MEMBER
          and PMEMBER_PROJECT = P.PROJECT_ID
        and MEMBER_MAIL = #{member_mail}
        and project_id = #{project_id}
        and PROJECT_DELETE = 'N'
        ORDER by to_number(project_id) desc
    </select>

</mapper>
